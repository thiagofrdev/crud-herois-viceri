// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Superheroes.Api.Data;

#nullable disable

namespace Superheroes.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20251013200636_SuperpoderesData")]
    partial class SuperpoderesData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("HeroisSuperpoderes", b =>
                {
                    b.Property<int>("HeroisId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SuperpoderesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HeroisId", "SuperpoderesId");

                    b.HasIndex("SuperpoderesId");

                    b.ToTable("HeroisSuperpoderes");
                });

            modelBuilder.Entity("Superheroes.Api.Entities.Herois", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Altura")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeHeroi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Peso")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Herois");
                });

            modelBuilder.Entity("Superheroes.Api.Entities.Superpoderes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Superpoder")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Superpoderes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Capacidade de voar",
                            Superpoder = "Voo"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Força física sobre-humana",
                            Superpoder = "Super Força"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Capacidade de se tornar invisível",
                            Superpoder = "Invisibilidade"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Capacidade de ir de um lugar a outro instantaneamente",
                            Superpoder = "Teletransporte"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Capacidade de reduzir seu tamanho a níveis microscópicos",
                            Superpoder = "Diminuir de tamanho"
                        });
                });

            modelBuilder.Entity("HeroisSuperpoderes", b =>
                {
                    b.HasOne("Superheroes.Api.Entities.Herois", null)
                        .WithMany()
                        .HasForeignKey("HeroisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Superheroes.Api.Entities.Superpoderes", null)
                        .WithMany()
                        .HasForeignKey("SuperpoderesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
